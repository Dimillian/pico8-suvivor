pico-8 cartridge // http://www.pico-8.com
version 41
__lua__
--player

player = {
	level = 1,
	xp = 0,
	xp_radius=16,
	next_xp = 10,
	health = 10,
	max_health=10,
	kills=0,
	weapons = { },
	is_moving=false,

	grace_delay=50,
	grace_counter=0,
	grace_on=false,

	proj_delay=70,
	proj_counter=0,
	proj_damage_x = 1,
	proj_delay_x = 0,
	proj_speed_x = 1,
	proj_count = 1,
	proj_max_pierce = 1,
	proj = { },

	sprite_idle=1,
	sprite_move1=2,
	sprite_move2=3,
	sprite_grace=4,
	sprite_move1_up=5,
	sprite_move2_up=6,
	sprite_move1_down=7,
	sprite_move2_down=8,

	x=512,
	y=256,
	speed=0.5,
	direction=0,

	init=function(self)
		self.sprite_moving_routing = cocreate(self.update_sprite_routine)
	end,

	draw=function(self)
		self:draw_ui()
		self:draw_player()
		self:draw_proj()
	end,

	draw_player=function(self)
		spr(self.sprite, self.x, self.y, 1, 1, self.direction == 0, false)
	end,

	draw_proj=function(self)
		for proj in all(self.proj) do
			proj:draw()
		end
	end,

	draw_ui=function(self)
		local x = player.x-64
		local y = player.y-64
		rectfill(x+3, y+4, x + 123, y + 6, 6)
		if self.xp > 0 then
			local xp_w = flr((self.xp / self.next_xp) * 123)
			rectfill(x+4, y+5, x + xp_w, y + 5, 2)
		end
		print("lvl" .. self.level, x + 112, y + 2, 7)

		rectfill(x+3, y+9, x + 60, y + 11, 7)
		local hp_w = flr((self.health / self.max_health) * 59)
		rectfill(x+4, y+10, x + hp_w, y + 10, 8)
		print(self.health .. "/" .. self.max_health, x + 62, y + 9, 7)
		print("score:" .. self.kills,  x + 4 ,y + 120, 7)
	end,

	update=function(self)
		self:update_movements()
		self:update_grace()
		self:update_level()
		self:update_proj()
		self:update_sprite()
	end,

	update_movements=function(self)
		if btn(0) or btn(1) or btn(2) or btn(3) then
			self.is_moving=true
			if btn(0) then
				self.direction = 0
				self.x = self.x - self.speed
			elseif btn(1) then
				self.direction = 1
				self.x = self.x + self.speed
			end

			if btn(2) then
				self.direction = 2
				self.y = self.y - self.speed
			elseif btn(3) then
				self.direction = 3
				self.y = self.y + self.speed
			end
		else
			self.is_moving=false
		end
	end,

	update_sprite=function(self)
		if costatus(self.sprite_moving_routing) != "dead" then
			coresume(self.sprite_moving_routing, self)
		end
	end,

	update_sprite_routine=function(self)
		while true do
			if self.grace_on then
				self.sprite = self.sprite_grace
				delay(2)
				self.sprite = self.sprite_idle
				delay(2)
			elseif self.is_moving then
				local move1 = self.sprite_move1
				local move2 = self.sprite_move2
				if self.direction == 2 then
					move1 = self.sprite_move1_up
					move2 = self.sprite_move2_up
				elseif self.direction == 3 then
					move1 = self.sprite_move1_down
					move2 = self.sprite_move2_down
				end

				self.sprite = move1
				delay(5)
				self.sprite = move2
				delay(5)
			else
				self.sprite = self.sprite_idle
				yield()
			end
		end
	end,

	update_level=function(self)
		if self.xp >= self.next_xp then
			sfx(sfx_level_up)
			self.xp = 0
			self.level = self.level + 1
			self.next_xp = ceil(self.next_xp * 1.5)
			state = state_lvl_up
		end
	end,

	update_proj=function(self)
		self.proj_counter = self.proj_counter + 1
		if self.proj_counter >= (self.proj_delay - self.proj_delay_x) then
			self.proj_counter = 0
			local c = cocreate(function()
				for i=1, self.proj_count do
					self:add_projectile()
					delay(5)
				end
			end)
			add(actions, c)
		end
		for proj in all(self.proj) do
			proj:update()
		end
	end,

	update_grace=function(self)
		self.grace_counter = self.grace_counter + 1
		if self.grace_counter >= self.grace_delay then
			self.grace_counter = 0
			self.grace_on = false
		end
	end,

	add_projectile=function(self)
		local foe = closest_foe()
		local angle = atan2(foe.x - self.x, foe.y - self.y)
		local proj = {
			damage=self.proj_damage_x,
			speed=0.8 * self.proj_speed_x,
			sprite=50,
			x=flr(self.x),
			y=flr(self.y),
			distance=0,
			distance_max=100,
			angle=angle,
			pierce_count=0,
			foe_hits={},
			draw=function(self)
				spr(self.sprite, self.x, self.y)
			end,
			update=function(self)
				self.distance = self.distance + 1
				if self.distance >= self.distance_max then
					del(player.proj, self)
				end

				self.x = self.x + self.speed * cos(self.angle)
				self.y = self.y + self.speed * sin(self.angle)
			end
		}
		sfx(sfx_proj)
		add(self.proj, proj)
	end,

	hit_by_foe=function(self, foe)
		if self.grace_on then
			return
		end
		self.grace_on=true
		self.health = self.health - foe.attack
	end,

	collect_xp=function(self, xp)
		self.xp = self.xp + xp
		sfx(sfx_xp)
	end
}

-->8
--world

xp = {
	sprite=17,
	sprite_foe=18
}

world = {
	foes = {},
	xp = {},
	foes = {},
	damages = {},

	world_map = {
		base_sprite = {64, 64, 64, 64, 64, 64, 80, 96, 112, 81, 113, 97},
		things_sprite = {65, 66, 67, 68, 69, 70, 71, 72},
		things_prob = 0.05,
	},

	init=function(self)
		self:gen_random_xp()
		self:gen_random_things()
	end,

	draw=function(self)
		map(0, 0)
		for xp in all(self.xp) do
			xp:draw()
		end
		for foe in all(self.foes) do
			foe:draw()
		end
		for thing in all(self.things) do
			thing:draw()
		end
		for damage in all(self.damages) do
			damage:draw()
		end
	end,

	update=function(self, player)
		for xp in all(self.xp) do
			xp:update(player)
		end
		for foe in all(self.foes) do
			foe:update(player)
		end
		for damage in all(self.damages) do
			damage:update()
		end
		local count = 10 + (5 * player.level - 1)
		if #self.foes <= 10 then
			self:add_foe(player)
		end
	end,

	add_foe=function(self, player)
		local x = player.x + rnd(player.x) - 128
		local y = player.y + rnd(player.y) - 128
		local speed = 0.2 * (player.level / 2)
		local xp = 1 * player.level
		local sprites = {33, 35, 37, 39, 41}
		local sprite = flr(rnd(sprites))
		local health = ceil(1 * (player.level / 3))
		local foe = {
			health=health,
			xp=xp,
			attack=1,
			is_dead=false,
			x=x,
			y=y,
			sprite=sprite,
			speed=speed,
			init=function(self)
				self.sprite_moving_routing = cocreate(self.update_sprite_routine)
				self.sprite_death_routine= cocreate(self.play_death_routine)
			end,
			draw=function(self)
				spr(self.sprite, self.x, self.y)
			end,
			update=function(self, player)
				if not self.is_dead and is_colliding(self, player) then
					player:hit_by_foe(self)
				end

				self:update_position(player)
				self:update_health()
				self:update_sprite()
			end,

			update_position=function(self, player)
				if self.is_dead then
					return
				end
				local dx = player.x - self.x
				local dy = player.y - self.y
				local distance = sqrt(dx * dx + dy * dy)

				if distance > 0 then
					dx = dx / distance
					dy = dy / distance
				end

				self.x = self.x + dx * self.speed
				self.y = self.y + dy * self.speed

			end,

			update_health=function(self)
				for proj in all(player.proj) do
					if is_colliding(self, proj) then
						for foe in all(proj.foe_hits) do
							if self == foe then
								return
							end
						end
						add(proj.foe_hits, self)
						self.health = self.health - proj.damage
						proj.pierce_count = proj.pierce_count + 1
						if proj.pierce_count >= player.proj_max_pierce then
							del(player.proj, proj)
						end
						world:add_damage(proj.damage, self.x + 2, self.y - 8)
					end
				end
				if self.health <= 0 then
					if not self.is_dead then
						self.is_dead=true
						sfx(sfx_foe_death)
						player.kills = player.kills + 1
					end
					if costatus(self.sprite_death_routine) != "dead" then
							coresume(self.sprite_death_routine, self)
					end
				end
			end,

			update_sprite=function(self)
				if costatus(self.sprite_moving_routing) != "dead" then
					coresume(self.sprite_moving_routing, self)
				end
			end,

			update_sprite_routine=function(self)
				local sprite = self.sprite
				while self.is_dead == false do
					self.sprite = sprite
					delay(10)
					if self.is_dead then
						break
					end
					self.sprite = sprite + 1
					delay(10)
				end
			end,

			play_death_routine=function(self)
				self.sprite = 61
				delay(8)
				self.sprite = 62
				delay(8)
				self.sprite = 63
				delay(8)
				world:add_xp(self.x, self.y, self.xp, true)
				del(world.foes, self)
			end
		}
		foe:init()
		add(self.foes, foe)
	end,

	add_xp=function(self, x, y, value, is_foe)
		local sprite = xp.sprite
		if is_foe then
			sprite = xp.sprite_foe
		end
		local xp = {
			x = flr(x),
			y = flr(y),
			speed=0.5,
			is_agro=false,
			value = ceil(value),
			sprite= sprite,
			draw=function(self)
				spr(self.sprite, self.x, self.y)
			end,
			update=function(self, player)
				if is_colliding_radius(self, player, player.xp_radius) then
					self.is_agro=true
				end
				if is_colliding(self, player) then
					player:collect_xp(self.value)
					del(world.xp, self)
				end
				self:update_position(player)
			end,
			update_position=function(self, player)
				if not self.is_agro then
					return
				end
				local dx = player.x - self.x
				local dy = player.y - self.y
				local distance = sqrt(dx * dx + dy * dy)

				if distance > 0 then
					dx = dx / distance
					dy = dy / distance
				end

				self.x = self.x + dx * self.speed
				self.y = self.y + dy * self.speed

			end,
		}
		add(self.xp, xp)
	end,

	add_damage=function(self, damage, x, y)
		local damage = {
			value = damage,
			x = x,
			y = y,
			init=function(self)
				self.update_routine = cocreate(self.update_damage_y)
			end,
			draw=function(self)
				print(self.value, self.x, self.y, 7)
			end,
			update=function(self)
				if costatus(self.update_routine) != "dead" then
					coresume(self.update_routine, self)
				end
			end,
			update_damage_y=function(self)
				for i=0, 8 do
					self.y = self.y - 0.5
					delay(2)
				end
				del(world.damages, self)
			end
		}
		damage:init()
		add(self.damages, damage)
	end,

 gen_random_xp=function(self)
		for i=1, 256 do
			self:add_xp(rnd(1024), rnd(512), rnd(3), false)
		end
	end,

	gen_random_things=function(self)
		for y=0,64 do
			for x=0,127 do
				local random_base_sprite = rnd(self.world_map.base_sprite)
				mset(x, y, random_base_sprite)
				local sprite = mget(x, y)
				if rnd(1) < self.world_map.things_prob then
					local	random_sprite = rnd(self.world_map.things_sprite)
     mset(x, y, random_sprite)
				end
			end
		end
	end

}

-->8
-- menu

menu_lvl_up = {
	selected=1,

	delay=5,
	counter=0,

	choices = {
		"speed",
		"health",
		"proj speed",
		"proj dmg",
		"proj delay",
		"proj count",
		"proj piercing",
		"xp radius",
	},
	options = nil,

	draw=function(self)
		local menu_width=80
		local menu_height=50
		local x0=player.x - menu_width/2
		local y0=player.y - menu_height/2
		local x1=player.x + menu_width/2
		local y1=player.y + menu_height/2
		rectfill(x0,y0,x1,y1,0)
		rect(x0,y0,x1,y1,7)
		print("level up!", x0 + 20, y0 + 5, 7)
		print("")
		print("level " .. player.level)
		print("")
		for index, option in pairs(self.options) do
			if index == self.selected then
				print("->" .. option)
			else
				print(option)
			end
		end
	end,

	update=function(self, player)
		if self.options == nil then
			self.options = self:make_options()
		end

		self.counter = self.counter + 1
		if self.counter <= self.delay then
			return
		end
		self.counter = 0

		if btn(2) and self.selected >= 1 then
			self.selected = self.selected - 1
		elseif btn(3) and self.selected < 3 then
			self.selected = self.selected + 1
		end
		if btn(5) then
			self:process_lvl_up(self.options[self.selected], player)
		end
	end,

	make_options=function(self)
		local copy = {}
		for key, value in pairs(self.choices) do
			copy[key] = value
		end
		local option1 = rnd(copy)
		del(copy, option1)
		local option2 = rnd(copy)
		del(copy, option2)
		local options = {
			option1,
			option2,
			rnd(copy)
		}
		return options
	end,

	process_lvl_up=function(self, option, player)
		if option == "health" then
			player.max_health = player.max_health + 5
		elseif option == "speed" then
			player.speed = player.speed + 0.15
		elseif option == "proj speed" then
			player.proj_speed_x = player.proj_speed_x + 0.2
		elseif option == "proj dmg" then
			player.proj_damage_x = player.proj_damage_x + 1
		elseif option == "proj delay" then
			player.proj_delay_x = player.proj_delay_x - 5
		elseif option == "proj count" then
			player.proj_count = player.proj_count + 1
		elseif option == "proj piercing" then
			player.proj_max_pierce = player.proj_max_pierce + 1
		elseif option == "xp radius" then
			player.xp_radius = player.xp_radius + 4
		end
		player.health = player.max_health
		self.options = nil
		state = state_game
	end


}

menu_main = {

}
-->8
-- helpers

sfx_xp=0
sfx_level_up=1
sfx_proj=2
sfx_foe_death=3

actions={}

function is_colliding(a,b)
	return (abs(a.x-b.x)+
	abs(a.y-b.y)) <= 8
end

function is_colliding_radius(a,b,r)
	return (abs(a.x-b.x)+
	abs(a.y-b.y)) <= r
end

function closest_foe()
	local closest_foe = nil
	local closest_distance = 1000
	for foe in all(world.foes) do
		local distance = sqrt((player.x - foe.x)^2 + (player.y - foe.y)^2)
		if distance < closest_distance then
			closest_distance = distance
			closest_foe = foe
		end
	end
	return closest_foe
end

function delay(frames)
	for i=1,frames do
		yield()
	end
end

function execute_actions()
	for c in all(actions) do
		if (not coresume(c)) del(actions,c)
	end
end
-->8
-- engine

state_game = 0
state_main_menu = 1
state_lvl_up = 2
state = state_game

function _init()
	cls()
	world:init()
	player:init()
	//music(0)
end

function _update60()
	if state == state_game then
		player:update()
		world:update(player)
	elseif state == state_lvl_up then
		menu_lvl_up:update(player)
	end
	execute_actions()
end

function _draw()
	cls()
	camera(player.x-64, player.y-64)
	world:draw()
	player:draw()
	if state == state_lvl_up then
		menu_lvl_up:draw()
	end
end

-->8
-- todo
-- spawn monster farther player
-- level up screen
-- better player ui
-- proj dmg + monster health
-- dmg number on hit
__gfx__
00000000000655000006550000065500000888000005550000555000000555000055500000000000000000000000000000000000000000000000000000000000
000000000006ff000006ff000006ff00000888000006660000666000000fff0000fff00000000000000000000000000000000000000000000000000000000000
00700700008440000084400000844000008880000088880000888800004884000048840000000000000000000000000000000000000000000000000000000000
00077000008460000884600000846000008880000088880000888800006446000064460000000000000000000000000000000000000000000000000000000000
0007700000846f00088466f008846f0000888800004884000088840000f44f0000f44f0000000000000000000000000000000000000000000000000000000000
00700700004400008844000008440000008800000048840000888400004444000044440000000000000000000000000000000000000000000000000000000000
00000000006660000066600000660000008880000066600000066600006660000006660000000000000000000000000000000000000000000000000000000000
00000000005050000000500000500000008080000050500000050500005050000005050000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000700000007000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000007c7000007c700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000cac00000c8c00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000cac00000c8c00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000c0000000c000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000909000000000000000c00000c00800777700007777000100000010100001000400000000400000000000000000000000000000000000000000000
0000000000929290009090008000c0080800c0000787800607878000510000151511115144400000444000000000000000000000000000000000000000000000
00000000092222290929290000cccc0000cccc08077770600777700005111150508181054c4444044c4444000000000000000000000000000000000000000000
0000000092828290922222900cccccc00cccccc00070060000700600001818000011110044444440444444400000000000000000000000000000000000000000
0000000009222229928282900c7cc7c00cccccc00077706040777666001111000070700080444400804444040000000000000000000000000000000000000000
0000000092222290922222900cccccc00c7c7cc00070000000700600000707000000000080404000004040000000000000000000000000000000000000000000
00000000092929000929290007c88c7007cccc700774000004770000000000000000000000404400004040000000000000000000000000000000000000000000
00000000009090000090900000888800008888000400040000040000011111100111111000440000004040000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000008000000000000000000000
0000000000000000008cc80000000000000000000000000000000000000000000000000000000000000000000000000000000000000080000000800800000800
000000000c111c0000caac0000000000000000000000000000000000000000000000000000000000000000000000000000000000008000800080000000000000
0000000001ccc10000caac0000000000000000000000000000000000000000000000000000000000000000000000000000000000800088000000880000800000
0000000001ccc100008cc80000000000000000000000000000000000000000000000000000000000000000000000000000000000088888000088808000000800
000000000c111c000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000088888088088000000008000
00000000000000000055550000000000000000000000000000000000000000000000000000000000000000000000000000000000000008000000008000808000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000080000000808000000000000
333333333333333333355333333333333333333333333333333333333bbbbb834333333300000000000000000000000000000000000000000000000000000000
333333333333333333555533333633333333333333933333333333333b8bbbb34443333300000000000000000000000000000000000000000000000000000000
33333333333b333335555553333633333333333339893333333337333bbbb8b33344333300000000000000000000000000000000000000000000000000000000
3333333333bbbb333555555336666633333333333393333337337a733bb44bb33334433300000000000000000000000000000000000000000000000000000000
333333333b8bb8b335555553333633333333333333b33bb37a733b33383443333333433300000000000000000000000000000000000000000000000000000000
333333333bbbbb33355555533336333333b3b33333b33b333b33b3b3333443333333443300000000000000000000000000000000000000000000000000000000
3333333333bb8bb3366666633bb6bbb33b3bb33333bbbb3333bb3333333443333333344300000000000000000000000000000000000000000000000000000000
33333333333bbbb366666666bbb6bbbb333b333333333bb3333b3333333443333333334400000000000000000000000000000000000000000000000000000000
33333333333333333333333300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
33333333333333333333333300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
33333333333333333333333300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
33353333333333633333333300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
33433333333333333333333300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
33333333333333333333333300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
33333353333333333333333300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
33333333333333333333333300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
33333333333333333333333300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
33333333333333333333333300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
35333333333333333333333300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
33433333333333333333333300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
33333333333433333333333300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
33333353333333333333333300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
33343d33333333333333333300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
33333333333333333333333300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
33333333333333333333333300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
34333333333333333333333300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
33363333333333333333333300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
33433333333333333333333300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
33333353333333333333333300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
33333336333333333333333300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
33333533333d33333333333300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
33333333333333333333333300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
04040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404
04040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404
04040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404
04040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404
04040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404
04040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404
04040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404
04040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404
04040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404
04040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404
04040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404
04040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404
04040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404
04040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404
04040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404
04040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404
04040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404
04040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404
04040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404
04040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404
04040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404
04040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404
04040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404
04040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404
04040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404
04040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404
04040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404
04040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404
04040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404
04040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404
04040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404
04040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404
04040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404
04040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404
04040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404
04040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404
04040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404
04040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404
04040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404
04040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404
04040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404
04040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404
04040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404
04040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404
04040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404
04040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404
04040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404
04040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404
04040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404
04040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404
04040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404
04040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404
04040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404
04040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404
04040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404
04040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404
04040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404
04040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404
04040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404
04040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404
04040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404
04040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404
04040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404
04040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404
__gff__
0003010103010101010000000000000000010100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000101000000000000000000000000000001010000000000000000000000000000010100000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__map__
4040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040
4040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040
4040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040
4040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040
4040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040
4040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040
4040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040
4040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040
4040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040
4040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040
4040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040
4040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040
4040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040
4040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040
4040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040
4040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040
4040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040
4040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040
4040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040
4040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040
4040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040
4040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040
4040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040
4040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040
4040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040
4040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040
4040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040
4040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040
4040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040
4040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040
4040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040
4040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040
__sfx__
0102000002412054220a4321043214442174421b4521e4522045224462264722b4722d4021e402234022c40232402304022e402274021d4021f402224022740230402374023a402314023a4023a4020040200402
000300000a352053520a352133520f3520f352183521b35216352183521d35224352223521b3521f3522735229352223521b352223522e35229352223521b352223522b3522e3523535235352353523c3523f352
170100001b5511b5511b5511b5511b5511b5511b5511b5511b5511b5511b5511b5511d5511f5512255122551275512b551335513c5513f5512c501325013450134501335012f5013350133501335013250130501
05020000355533555333553305532b553295532755327553225531f5531655313553115530c6530c65307653076530a6530a653076530365300653126030f6030e6030e6030e6030d6030a603086030660302603
00010000030000100001000030000500007000090000b0000d0001000014000160001b0001d00022000250002a0002e000300003300035000370003a0003f0000000000000000000000000000000000000000000
0001000020000210002200022000220002200022000220002200021000210001f0001e0001c0001a00019000170001500014000120001200011000100000f0000e0000d0000c0000b0000a000090000700006000
000500002c0002c00023000250002800025000210001c0001d0001f0002000022000220001c0001a0001c0001d00020000210002400027000220001c000250000f0000c00011000180002d000290002600022000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001400002975229752277521f7521f7522275227752297522b75229752247521d75218752187521b7521f75227752297522b7522e7522e7522e7522e7522e7522e7522975227752297522b7522b7522b7522b752
001400001d1301b1401b1401b1301d1302213027130291302913029140291402b1502b14027140241402414027140291402e14030130331403315033140331402e14029140271402214022140241402714027140
001400002923029230002300023011230002300023000230272302923000230162200022000220002200021024210162102721002210132100022000220002201f2202222000220122200f2200b2100921000210
001400001855018550185501b5501b5501b5501b5501b5502255027550295502755022550225501f55022550275502755024550225501d5501f5502255022550275502b5502b5502955027550275502755027550
30140000057520575207752077520f7521375216752167520f7520c7520c7520c7520f75213752187521d7521d7521d752187521375216752187521d7522275222752227521d7521b7521b7521f7522275222752
001400000f7500f7500f7501175011750117500c75007750077500a7500a7500a7500c7500f75011750117501175011750117500c7500a7500a7500a7500c750117501375013750137500a7500a7500a7500a750
001400000a1200a1200a12005120051200512005120051200c1200c1200c1200c1200a1200a1200a1200a120031200312003120031200a1200a1300a13003130051400a1400a1300713007130071300515003150
__music__
01 0e4b4c44
00 0d0e4344
00 0a420c44
00 0d0e0b44
02 100f4344

